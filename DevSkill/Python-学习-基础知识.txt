Python-学习-基础知识：

1.基本数据类型
	1> Number（数字）：int、 float、 bool、 complex（复数）
	2> String（字符串）
	3> List（列表）
	4> Tuple（元组）
	5> Set（集合）
	6> Dictionary（字典）

	注：
		①不可变数据（3 个）：Number（数字）、String（字符串）、Tuple（元组）
		②可变数据（3 个）：List（列表）、Set（集合）、Dictionary（字典）。 

		③Tuple（元组）：元组中只包含一个元素时，需要在元素后面添加逗号 `,` ，否则括号会被当作运算符使用：
		>>> tup1 = (6)		//类型为整型
		>>> tup1 = (6,)		//类型为元组

		③Set（集合）：可以使用大括号 { } 或者 set() 函数创建集合，注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。 


2.安装/卸载第三方依赖库
	1> pip install redis [-i https://pypi.tuna.tsinghua.edu.cn/simple/]
	   指定版本：pip install redis==2.8.7
	2> pip list
	3> pip uninstall redis

	注：`pip uninstall xxx`，只会卸载指定的包，指定包的依赖不能被卸载。


3.pip 离线安装依赖
	1> 导出依赖库：
		pip freeze > lib/requirements.txt

	2> 下载依赖库的离线安装包到 lib 目录：
		cd lib
		pip download -r requirements.txt

	3> 无网设备离线安装：
		cd lib
		pip install --no-index --find-links=./ -r requirements.txt
	
	注：经测试验证(pip-V18.1)，`pip install -r requirements.txt` 执行过程中某个包安装失败，`requirements.txt` 里的其他依赖均不会被安装。


4.包模块(导入)
	from urllib import parse as url
	import requests as http


5.类(对象)
	class People(object):　　#创建父类，继承object类

	    def __init__(self, name, age):　　#必须传入 name 和 age
	        self.name = name
	        self.age = age
	 
	    def eat(self):
	        print("i am {0},i am {1} years old!".format(self.name, self.age))


6.条件控制、循环语句、异常处理、函数定义、内置函数、标准库等。


7.注释：
	① 单行注释以 # 开头。
	② 多行注释用三个单引号 ''' 或者三个双引号 """ 将注释括起来。


8.Python 虚拟环境：
	① 创建虚拟环境：
		python -m venv ${work-dir}

	② 激活虚拟环境：
		Windows：`<work-dir>\Scripts\activate.bat`
		Linux：	 `source <work-dir>/bin/activate`

	③ 退出虚拟环境：
		虚拟模式下退出命令：deactivate

	注：
		① 激活环境不是必须的，激活只是将虚拟环境的二进制目录添加到 PATH 的搜索路径中。
		② 当虚拟环境激活时，`VIRTUAL_ENV` 环境变量会被设为该虚拟环境的根路径。是否在虚拟环境中，可通过以下方式检测：
			Windows：`echo %VIRTUAL_ENV%`
			Linux：	 `echo $VIRTUAL_ENV`


9.Python 语法提示基础：
	obj = list(["a", "b", "c"])

	# ① 获取对象类型
	print(type(obj))

	# ② 获取对象的属性及方法
	print(dir(obj))

	# ③ 获取对象的属性及方法，并标识属性及方法。
	print([(name, type(getattr(obj, name))) for name in dir(obj)])

	# ④ 获取对象的属性及方法，并标识属性及方法。
	print([(name, 'func' if callable(getattr(obj, name)) else 'attr') for name in dir(obj)])

	# ⑤ 打印 `pydoc` 帮助信息，获取属性及方法的说明文档。
	help(obj)
	
	help("sys")
	
	help("open")

	# ⑥ 启动一个 HTTP 服务展示说明文档。
	python -m pydoc -p 1234


10.Python 启用一个简单的 Web 服务 或 文件服务器：
	# Python3
	python -m http.server [端口号，默认8000]
	# Python2
	python -m SimpleHTTPServer [端口号，默认8000]


