GraalVM

GraalVM 的核心特性​​
	​​高性能运行时​​
		​​JIT 编译器​​：在运行时动态优化热点代码，提升峰值吞吐量（性能提升最高达 50%）。
​​		AOT 编译（Native Image）​​：将 Java 字节码提前编译为独立可执行文件，启动速度提升 ​​100 倍​​，内存占用降低 ​​5-10 倍​​，适合云原生微服务。
	多语言支持与互操作性​
		通过 ​​Truffle 语言框架​​支持 Java、JavaScript、Python、Ruby、R 等语言在同一个运行时中混合执行，数据无需序列化即可跨语言传递。
	云原生优化​
		轻量化部署：生成的小型二进制文件（不含 JVM）适合容器化，启动快、资源占用低，完美匹配 Kubernetes 和 Serverless 场景。
	增强安全性​
		自动移除未使用代码（Tree Shaking），减少攻击面。
		默认禁用反射等动态特性，需显式配置允许访问的类和方法。

GraalVM 与 JDK 的关系：
	GraalVM 是一种增强型 JDK。​​
    ​​基础架构​​
    	GraalVM 基于 ​​OpenJDK​​ 构建，完全兼容 JDK 规范，可视为 JDK 的扩展版本。GraalVM 社区版使用 OpenJDK 代码库，支持标准的 Java API 和工具链（如 javac、jstack）。
​​	兼容性​​
		现有 Java 应用无需修改即可运行在 GraalVM 上，但需注意动态特性（如反射、动态类加载）在原生编译（AOT）模式下需额外配置。



