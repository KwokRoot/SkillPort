Maven-打包为可执行的配置文件、依赖JAR包外置JAR包：


<build>
	<plugins>
		<!-- 设置编译器版本 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		<!-- 复制配置文件到 config 目录 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<executions>
				<execution>
					<id>copy-resources</id>
					<phase>package</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<encoding>UTF-8</encoding>
						<outputDirectory>
							${project.build.directory}/config
						</outputDirectory>
						<resources>
							<resource>
								<directory>${project.basedir}/src/main/resources/</directory>
							</resource>
						</resources>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<!-- 拷贝依赖的 Jar 包到 lib 目录 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<executions>
				<execution>
					<id>copy</id>
					<phase>package</phase>
					<goals>
						<goal>copy-dependencies</goal>
					</goals>
					<configuration>
						<outputDirectory>
							${project.build.directory}/lib
						</outputDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>

		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<configuration>
				<archive>
					<!-- 主程序入口 main 方法所在类 -->
					<manifest>
						<mainClass>com.devops.ServerStart</mainClass>
						<addClasspath>true</addClasspath>
						<classpathPrefix>lib/</classpathPrefix>
					</manifest>

					<!-- 配置文件外置 config 目录，加入到 META-INF/MANIFEST.MF 类路径 Class-Path 属性中 -->
					<manifestEntries>
						<Class-Path>config/</Class-Path>
					</manifestEntries>
				</archive>
				<excludes>
					<exclude>*.*</exclude>
				</excludes>
			</configuration>
		</plugin>
	</plugins>
</build>


