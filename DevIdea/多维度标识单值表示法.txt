多维度标识单值表示法:

1.确定现有的维度标识。

	维度1：类型：类型A、类型B、类型C...
	维度2：等级：低、中、高、特高...
	...

	目的：用一个数值能够标识多个维度值，又能适配维度及维度类型有限范围内的扩充。

2.给足各维度类型个数。

	维度1：类型设置最多256种(即7个二进制位)
	维度2：处理等级最多8种(即3个二进制位)
	维度3：假设其他标识4种(即2个二进制位)


3.确定储存值类型。

	现有3个维度类型总长度共计12个二进制，Integer 类型占4个字节32位，还可为以后维度的扩充预留20位二进制位，使用 Integer 类型即可满足。也可采取 Long 类型、BigInteger 类型。

4.计算值。

	(维度3)00|(维度2)000|(维度1)0000000 该二进制的值

	//2位|3位|7位
	//由各维度值求值：//(${维度3值} << 10) + (${维度2值} << 7) + ${维度1值}
	
	假设：
		维度1值：16
		维度2值：5
		维度3值：3

		System.out.println((3 << 10) + (5 << 7) + 16);
		//结果：3728

5.值解析。

	例：
		由值求各维度值：

		System.out.println(3728 >> 10  & 0b11);
		//结果：3
		System.out.println(3728 >> 7 & 0b111);
		//结果：5
		System.out.println(3728 & 0b1111111);
		//结果：16




拓展：
	① 为什么使用二进制？
		二进制的任何一位数值都可以标识一个状态，该数值与各维度的值可通过移位计算。

	② 想法来源：Linux 系统中文件权限 `rwx` 权限值的计算。
