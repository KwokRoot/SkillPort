用户身份识别机制：


有状态的Session机制缺点：

	服务端保存大量数据，增加服务端压力。
	服务端保存用户状态，集群化部署，需实现Session共享机制，或实现客户端IP路由绑定服务器。


无状态的优势：

	客户端请求不依赖服务端的信息，多次请求不需要必须访问到同一台服务器。
	服务端可以任意的迁移和伸缩（可以方便的进行集群化部署）。
	减小服务端存储压力。



拓展：
	JWT(JSON Web Token)：
		应用场景：
			一次性验证，适合做简单的 restful api 认证。

		实现：
			首先客户端发送账户名、密码到服务端进行认证。
			认证通过后，服务端将用户信息加密并且编码成一个token，返回给客户端。
			以后客户端每次发送请求，携带认证的token。
			服务端对客户端发送来的token进行解密，判断是否有效，并且获取用户登录信息。

		缺点：
			载荷 Payload 信息公开(采用jwe)。
			无法满足注销场景(设计可清除token逻辑)。
			无法满足修改密码场景(将token设置较短有效期，采用 refreshToken 机制)。
			无法满足token续签场景(将token设置较短有效期，采用 refreshToken 机制)。

	OAuth2(Open Authorization)：
		应用场景：
			实现SSO(SingleSignOn)单点登录。


